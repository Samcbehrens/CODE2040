
import java.util.Stack;


public class datatime {

	Stack<Float> Times;
	int month;
	int days;
	
	
public Stack<Float> converstion(int seconds){
	Times=new Stack<Float>();
	
	float secondstoAdd=seconds%60;
	Times.push(secondstoAdd);
	
	float totalMinutes=(float) Math.floor(seconds/60);
	float minutestoAdd=totalMinutes%60;
	Times.push(minutestoAdd);
	
	float totalHours=(float) Math.floor(totalMinutes/60);
	float hourstoAdd=totalHours%24;
	Times.push(hourstoAdd);
	
	float totalDays=(float) Math.floor(totalHours/24);//minutes,hours,days 
	Times.push(totalDays);
	
	//not sure how to deal with MONTHS!!!!! :S
	
	return Times;
}

public Stack<Integer> parser(String initStringtime){
	 
	Stack <Integer> newNum= new Stack<Integer>(); 
	
	String DatevsTime[]=initStringtime.split("T");
	String dateArray[]=DatevsTime[0].split("-");
	
	
	//Splits into {year,month,day,overalltime}
	//have to split overall time to hours and seconds 
	
	String year=dateArray[0];
	Integer intYear=Integer.parseInt(year);
	newNum.push(intYear);
	
	String month=dateArray[1];
	Integer intMonth=Integer.parseInt(month);
	newNum.push(intMonth);
	
	String day=dateArray[2];
	Integer intDay=Integer.parseInt(day);
	newNum.push(intDay);
	
	String timeArray[]=DatevsTime[1].split(":");
	
	
	String hour=timeArray[0];
	Integer intHour=Integer.parseInt(hour);
	newNum.push(intHour);
	 
	String minute=timeArray[1];
	Integer intMinute=Integer.parseInt(minute);
	newNum.push(intMinute);
	
	String getRidofmill[] = null;
		
	if(timeArray[2].contains("+")){
		getRidofmill=timeArray[2].split("\\+");


	}
	else if (timeArray[2].contains("Z")){
		getRidofmill=timeArray[0].split("Z");

	}
	else if (timeArray[2].contains("-")){
		getRidofmill=timeArray[0].split("-");

	}

	String seconds=getRidofmill[0];
	seconds=seconds.replaceAll("\\s", "");
	
	Integer intSecond=Integer.parseInt(seconds);
	newNum.push(intSecond);
	return newNum;
	
}

public void FindMonth(float intDay,int intMonth){
	
	while(intDay>28){
		if(intMonth==9 ||intMonth==4 ||intMonth==6 ||intMonth==11 ){
			intDay=intDay-30;
			intMonth=intMonth+1;
		
		}
		else if((intMonth==2)){
			intDay=intDay-28;
			intMonth=intMonth+1;
			
		}
		else if(intDay>=31){
			
			intDay=intDay-31;
			intMonth=intMonth+1;
		}
	}
	this.month=intMonth;
	this.days=(int) intDay;
}

public int getMonth(){
	return month;
}

public int getDay(){
	return days;
}
	
public static void main(String args[]){
	
	//put interval time here
	int interval=259200;
	
	datatime dataTimeobject=new datatime();
	
	//put initial time here
	String initStringtime="2014-12-02T19:28:25 + 00:00";
	System.out.println(initStringtime+" original number");
	
	Stack<Integer>ParsedNum=dataTimeobject.parser(initStringtime);
	
	int intSecond=ParsedNum.pop();
	
	int intMinute=ParsedNum.pop();
	
	int intHour=ParsedNum.pop();
	
	int intDay=ParsedNum.pop();
	
	int intMonth=ParsedNum.pop();
	
	int intYear=ParsedNum.pop();
	
	
	//convert interval into year, moth, days,hours,minutes,seconds 
	Stack<Float> outputStack=dataTimeobject.converstion(interval);
	
	
	float daystoAdd=outputStack.pop();
	float hourstoAdd=outputStack.pop();
	float minutestoAdd=outputStack.pop();
	float secondstoAdd=outputStack.pop();
	

	dataTimeobject.FindMonth(daystoAdd,intMonth);//PASSED THIS VALUE IN WRONG. 
	int monthstoAdd=dataTimeobject.getMonth();
	int finalDay=dataTimeobject.getDay();
	
	 intMonth=dataTimeobject.getMonth();
	//if months equal more than one year
	
	///DOESNT DEAL WITH LEEP YEARS :S
		int yearsToadd=(int) (daystoAdd%365);
		intYear=intYear+yearsToadd;

	
	intDay=(int) (intDay+finalDay);
	
	intHour=(int) (intHour+hourstoAdd);
	if(intHour>=24){
		intDay=intDay+1;
		intHour=intHour%24;
	}
	
	intMinute=(int) (intMinute+minutestoAdd);
	if(intMinute>=60){
		intHour=intHour+1;
		intMinute=intMinute%60;
	}
	
	
	intSecond= (int) (intSecond+secondstoAdd);
	if (intSecond>=60){
		intMinute=intMinute+1;
		intSecond=intSecond%60;
	}
	
	String finalOutput=""+intYear+"-";
	
	if(intMonth<10){
		finalOutput=finalOutput+0;

	}
	
	finalOutput=finalOutput+intMonth+"-";

	if(intDay<10){
		finalOutput=finalOutput+0;
	}
	finalOutput=finalOutput+intDay+"T";

	if(intHour<10){
		finalOutput=finalOutput+0;
	}
	finalOutput=finalOutput+intHour+":";

	if(intMinute<10){
		finalOutput=finalOutput+0;
	}
	finalOutput=finalOutput+intMinute+":";

	if(intSecond<10){
		finalOutput=finalOutput+0;
	}
	finalOutput=finalOutput+intSecond;

	if (initStringtime.contains("Z")){
		finalOutput=finalOutput+"Z";
	}
	else{
		String[] getRideofmill=initStringtime.split("\\+");
		finalOutput=finalOutput+" +"+getRideofmill[1];
	}
	
	System.out.println(finalOutput);
}
}
